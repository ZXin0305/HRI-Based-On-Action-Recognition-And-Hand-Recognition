import matplotlib.pyplot as plt
import numpy as np
def show3Dpose(keypoints = None): # blue, orange
  # keypoints=[[
  # [860, 447, 0, 0.9641304016113281],[877, 523, 0, 0.9224069118499756], [818, 523, 0, 0.9375095367431641], [801, 624, 0, 0.976944625377655], [784, 717, 0, 0.979868471622467], [936, 523, 0, 0.9507156014442444], [953, 624, 0, 1.0098296403884888], [961, 708, 0, 0.9620855450630188], [826, 725, 0, 0.9514967799186707], [826, 869, 0, 0.9408767223358154], [826, 1004, 0, 0.8555393815040588], [911, 725, 0, 0.8678263425827026], [919, 877, 0, 0.9099177122116089],  [902, 1004, 0, 0.9049795866012573], [852, 430, 0, 1.0288584232330322], [877, 430, 0, 0.9900329113006592], [835, 438, 0, 0.5664052963256836],
  # [902, 447, 0, 0.9955519437789917]]]
#   pairs = [[0, 1], [0, 14], [0, 15], [1, 2], [1, 5], [1, 8], [1, 11], [2, 3], [3, 4], [5, 6], [6, 7], [8, 9], [9, 10],
#            [11, 12], [12, 13], [14, 16], [15, 17]]
#   I = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 11, 12, 13, 14, 15, 16, 17])

    pairs = [[0,1], [0,2], [0,9], [0,3], 
            [3,4], [4,5], 
            [9,10], [10,11], 
            [2,6], [6,7], [7,8], 
            [2,12], [12,13], [13,14]]
    colors = ['r', 'b', 'g', 'y', 'c', 'm']

    # keypoints = np.array([[[ 25.00901413, -45.19756317, 263.42910767,   1.        ],
    #     [ 26.56303406, -71.15634918, 252.17424011,   1.        ],
    #     [ 21.98304749,   3.50263977, 276.67953491,   1.        ],
    #     [ 38.80086517, -40.52055359, 264.87020874,   1.        ],
    #     [ 46.85009766, -13.96831322, 266.86895752,   1.        ],
    #     [ 33.80112457, -10.64038754, 247.04275513,   1.        ],
    #     [ 33.99029541,   3.24306965, 277.63787842,   1.        ],
    #     [ 35.70560074,  51.34352493, 282.99432373,   1.        ],
    #     [ 30.23616791,  82.58894348, 300.46981812,   1.        ],
    #     [ 11.97229958, -41.03090286, 264.28591919,   1.        ],
    #     [  0.5637989 , -14.81371498, 273.96826172,   1.        ],
    #     [  1.42970276,   4.4333415 , 264.99734497,   1.        ],
    #     [  9.97585011,   3.76220918, 275.72119141,   1.        ],
    #     [ 10.52076149,  50.29183578, 282.75863647,   1.        ],
    #     [  9.82186413,  82.58624268, 301.5163269 ,   1.        ]],

    #    [[ 60.78172302, -61.30197906, 274.2387085 ,   1.        ],
    #     [ 56.09085846, -82.96670532, 260.33200073,   1.        ],
    #     [ 60.59460449, -12.78677559, 290.79223633,   1.        ],
    #     [ 71.2431488 , -56.15250397, 268.39697266,   1.        ],
    #     [ 82.63288879, -25.55602646, 267.75082397,   1.        ],
    #     [ 63.1686821 , -17.39288521, 262.12194824,   1.        ],
    #     [ 68.67262268, -10.64646149, 284.74325562,   1.        ],
    #     [ 63.30794907,  39.35305023, 292.00506592,   1.        ],
    #     [ 63.12442017,  71.84120941, 304.03265381,   1.        ],
    #     [ 52.4719162 , -61.32591248, 283.17684937,   1.        ],
    #     [ 46.18539047, -41.73874664, 302.09823608,   1.        ],
    #     [ 40.42707825, -26.99537277, 295.07647705,   1.        ],
    #     [ 52.51663971, -14.92708969, 296.84118652,   1.        ],
    #     [ 47.92991638,  31.20150948, 309.20684814,   1.        ],
    #     [ 55.52284622,  64.64589691, 321.80532837,   1.        ]]])

    # keypoints = np.array([[[ 15.2497282 , -43.52009201, 260.42156982,   1.        ],
    #     [ 21.17174911, -66.96614075, 249.245224  ,   1.        ],
    #     [ 16.27303886,   5.36421585, 272.97131348,   1.        ],
    #     [ 28.06996918, -40.16696548, 264.34014893,   1.        ],
    #     [ 39.96214294, -13.06035614, 271.05725098,   1.        ],
    #     [ 43.48194885,   6.14093685, 259.89758301,   1.        ],
    #     [ 27.87545967,   3.39921474, 275.44790649,   1.        ],
    #     [ 34.36672592,  52.34024429, 277.37023926,   1.        ],
    #     [ 33.10439301,  83.81509399, 293.24963379,   1.        ],
    #     [  2.04553318, -37.88278961, 258.24383545,   1.        ],
    #     [ -7.58691978,  -9.79081631, 262.35873413,   1.        ],
    #     [ -2.43239594,   9.3167448 , 259.55950928,   1.        ],
    #     [  4.67062187,   7.32921648, 270.49472046,   1.        ],
    #     [  8.24165058,  54.00278091, 278.82333374,   1.        ],
    #     [  5.95851421,  84.08163452, 300.17004395,   1.        ]],

    #    [[ 54.72697067, -59.54101562, 269.74484253,   1.        ],
    #     [ 49.46401215, -75.15068054, 250.40583801,   1.        ],
    #     [ 56.72661591, -22.08590889, 294.70834351,   1.        ],
    #     [ 66.19210052, -55.86257172, 269.54544067,   1.        ],
    #     [ 86.74597168, -35.14614105, 280.93518066,   1.        ],
    #     [ 71.45569611, -22.9529953 , 269.28131104,   1.        ],
    #     [ 63.9187088 , -20.66139603, 290.6854248 ,   1.        ],
    #     [ 64.84761047,  29.0389843 , 286.16036987,   1.        ],
    #     [ 64.25782776,  65.44574738, 292.8092041 ,   1.        ],
    #     [ 44.69051743, -60.42218018, 277.60632324,   1.        ],
    #     [ 25.49183273, -45.85399246, 291.78121948,   1.        ],
    #     [ 25.1590786 , -29.28782082, 282.60794067,   1.        ],
    #     [ 49.5344429 , -23.51041985, 298.73129272,   1.        ],
    #     [ 59.34932327,  22.95825768, 307.10995483,   1.        ],
    #     [ 72.05912018,  61.19510651, 306.381073  ,   1.        ]]])


    keypoints = np.array([[[-25.32042122,  -5.0493679 , 247.91031647],
        [-20.62604141, -33.82218552, 240.01654053],
        [-26.07524872,  42.50642776, 253.65687561],
        [-12.16228867,  -4.7557869 , 249.85353088],
        [  0.99947357,  21.89403534, 255.07112122],
        [  4.17685699,  32.53925705, 234.25080872],
        [-14.47108269,  42.2028656 , 255.58677673],
        [-12.69919014,  88.01116943, 259.17358398],
        [-20.479702  , 119.48391724, 273.46081543],
        [-38.47855377,  -5.34294891, 245.96710205],
        [-51.51763916,  19.09983063, 249.1000061 ],
        [-42.58155441,  32.71099854, 236.28390503],
        [-37.67937469,  42.80998993, 251.72695923],
        [-35.01816559,  88.47117615, 252.95117188],
        [-38.29484177, 122.39027405, 265.25323486]],

       [[ 85.62221909, -39.36849785, 287.62809753],
        [ 81.87574768, -68.13658905, 279.66595459],
        [ 83.8563385 ,   3.8911891 , 301.0194397 ],
        [ 96.61167908, -37.18325806, 281.48620605],
        [102.45167542,  -7.86602545, 282.20401001],
        [ 97.03630829,  16.44339371, 277.41680908],
        [ 93.00309753,   6.07825279, 295.39608765],
        [ 85.1698761 ,  53.94876862, 299.44515991],
        [ 85.2374649 ,  86.99687195, 314.30126953],
        [ 74.63275909, -41.55373764, 293.76998901],
        [ 60.03259277, -14.93273163, 299.23492432],
        [ 55.48352051,   6.2288065 , 291.27648926],
        [ 74.70957184,   1.7041254 , 306.64279175],
        [ 70.67300415,  50.01367188, 311.00048828],
        [ 76.9160614 ,  85.97093201, 321.19519043]]])

    # keypoints = np.array([[[ 2.48628349e+01, -4.97450829e+01,  2.64401825e+02,
    #       1.74069500e+00],
    #     [ 2.67061768e+01, -7.49908447e+01,  2.53705505e+02,
    #       1.48825777e+00],
    #     [ 2.16436234e+01,  5.11735964e+00,  2.76565033e+02,
    #       1.41492033e+00],
    #     [ 4.13237000e+01, -4.75992126e+01,  2.66035065e+02,
    #       1.65041494e+00],
    #     [ 4.65140114e+01, -1.63172417e+01,  2.65157654e+02,
    #       1.65842009e+00],
    #     [ 3.33265533e+01, -1.99236202e+01,  2.51327209e+02,
    #       1.61241210e+00],
    #     [ 3.35459747e+01,  5.53277206e+00,  2.75187408e+02,
    #       1.38976610e+00],
    #     [ 3.43805351e+01,  4.95814476e+01,  2.81778503e+02,
    #       1.80579519e+00],
    #     [ 3.33407326e+01,  8.12846451e+01,  2.95710571e+02,
    #       1.62353957e+00],
    #     [ 8.67660618e+00, -4.48046837e+01,  2.62880341e+02,
    #       1.64758992e+00],
    #     [-2.28757167e+00, -1.40742502e+01,  2.71517029e+02,
    #       1.85111928e+00],
    #     [-4.71098948e+00,  8.63689613e+00,  2.69648224e+02,
    #       1.66115320e+00],
    #     [ 8.18070126e+00,  3.56401157e+00,  2.77723633e+02,
    #       1.48763967e+00],
    #     [ 7.27120972e+00,  4.92885056e+01,  2.83344086e+02,
    #       1.69040275e+00],
    #     [ 7.76002979e+00,  7.57677460e+01,  2.94968140e+02,
    #       1.76610029e+00]],

    #    [[ 1.54103256e+02, -6.28597794e+01,  2.77940247e+02,
    #       1.64263475e+00],
    #     [ 1.50635284e+02, -8.96095276e+01,  2.70730103e+02,
    #       1.69157827e+00],
    #     [ 1.54175873e+02, -1.18010206e+01,  2.87193359e+02,
    #       1.22403264e+00],
    #     [ 1.50643341e+02, -5.48135185e+01,  2.74418762e+02,
    #       9.37303722e-01],
    #     [ 1.52146210e+02, -1.95528584e+01,  2.72727264e+02,
    #       7.97131896e-01],
    #     [ 1.58899841e+02, -1.40908699e+01,  2.72277832e+02,
    #       6.10993803e-01],
    #     [ 1.47577744e+02, -9.04673386e+00,  2.82818390e+02,
    #       1.15627337e+00],
    #     [ 1.33627579e+02,  3.60037422e+01,  2.90308716e+02,
    #       1.24417353e+00],
    #     [ 1.25412071e+02,  7.18590012e+01,  2.93614258e+02,
    #       1.21572614e+00],
    #     [ 1.61600662e+02, -6.18801346e+01,  2.88553009e+02,
    #       1.49114060e+00],
    #     [ 1.65306808e+02, -3.62557983e+01,  2.96434692e+02,
    #       4.87738431e-01],
    #     [ 1.56446487e+02, -2.99624805e+01,  2.98153687e+02,
    #       2.18887404e-01],
    #     [ 1.58745056e+02, -1.47428303e+01,  2.90322937e+02,
    #       1.01946902e+00],
    #     [ 1.59111664e+02,  2.85662632e+01,  2.94753296e+02,
    #       1.07494485e+00],
    #     [ 1.69719940e+02,  6.20098000e+01,  2.90530518e+02,
    #       1.17110717e+00]]])


    keypoints = np.array(keypoints)[:, :, :3] / 100.0
    for i in range(keypoints.shape[0]):
        keypoints[i,0,:3] = (np.array(keypoints[i,3,:3]) + np.array(keypoints[i,9,:3])) / 2
    
    ax = plt.subplot(projection='3d')
    RADIUS = 1.5 # space around the subject
    # xroot, yroot, zroot = keypoints[0,0], keypoints[0,1], keypoints[0,2]
    # ax.set_xlim3d([-RADIUS+xroot, RADIUS+xroot])
    # ax.set_zlim3d([-RADIUS+zroot, RADIUS+zroot])
    # ax.set_ylim3d([-RADIUS+yroot, RADIUS+yroot])

    # min_x = np.min(keypoints[:, :, 0])
    # max_x = np.max(keypoints[:, :, 0])
    # min_y = np.min(keypoints[:, :, 1])
    # max_y = np.max(keypoints[:, :, 1])
    # min_z = np.min(keypoints[:, :, 2])
    # max_z = np.max(keypoints[:, :, 2])

    ax.set_xlim3d([- RADIUS, 2])
    # ax.set_ylim3d([- RADIUS, RADIUS])
    ax.set_zlim3d([0, 5])

    idx = 0
    for keypoint in keypoints:
        for pair in pairs:
            x, y, z = [np.array([keypoint[pair[0], j], keypoint[pair[1], j]]) for j in range(3)]
            if x[0] == 0.0 or y[0] == 0.0 or z[0] == 0.0 \
                 or x[1] == 0.0 or y[1] == 0.0 or z[1] == 0.0:
                 continue
            ax.plot(x, y, z, lw=1.5, c=(colors[idx]))  # 左右两边的骨骼以不同的颜色展示
        idx += 1

        ax.set_xlabel("x")
        ax.set_ylabel("y")
        ax.set_zlabel("z")

        # Get rid of the ticks and tick labels
        # ax.set_xticks([])
        # ax.set_yticks([])
        # ax.set_zticks([])

        # ax.get_xaxis().set_ticklabels([])
        # ax.get_yaxis().set_ticklabels([])
        # ax.set_zticklabels([])

        # Get rid of the panes (actually, make them white)
        # white = (1.0, 1.0, 1.0, 0.0)
        # ax.w_xaxis.set_pane_color(white)
        # ax.w_yaxis.set_pane_color(white)
        # Keep z pane

        # Get rid of the lines in 3d
        # ax.w_xaxis.line.set_color(white)
        # ax.w_yaxis.line.set_color(white)
        # ax.w_zaxis.line.set_color(white)
    plt.show()

if __name__ == "__main__":
    show3Dpose()